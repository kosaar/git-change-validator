version: "3.8"

services:
  # PostgreSQL Database
  supabase-db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-supabase}
      POSTGRES_USER: ${POSTGRES_USER:-supabase}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGPORT: ${PGPORT:-5432}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - supabase
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-supabase}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgREST API
  supabase-rest:
    image: postgrest/postgrest:v12.0.1
    restart: always
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER:-supabase}:${POSTGRES_PASSWORD}@supabase-db:5432/${POSTGRES_DB:-supabase}
      PGRST_DB_SCHEMAS: ${PGRST_DB_SCHEMAS:-public}
      PGRST_DB_ANON_ROLE: ${PGRST_DB_ANON_ROLE:-anon}
      PGRST_JWT_SECRET: ${JWT_SECRET}
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_APP_SETTINGS_JWT_SECRET: ${JWT_SECRET}
      PGRST_APP_SETTINGS_JWT_EXP: ${JWT_EXPIRY:-3600}
      PGRST_LOG_LEVEL: warn
    depends_on:
      - supabase-db
    networks:
      - supabase
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Supabase GoTrue Auth
  supabase-auth:
    image: supabase/gotrue:v2.147.0
    restart: always
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: ${API_EXTERNAL_URL}
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://${POSTGRES_USER:-supabase}:${POSTGRES_PASSWORD}@supabase-db:5432/${POSTGRES_DB:-supabase}
      GOTRUE_SITE_URL: ${SITE_URL}
      GOTRUE_URI_ALLOW_LIST: ${ADDITIONAL_REDIRECT_URLS}
      GOTRUE_DISABLE_SIGNUP: ${DISABLE_SIGNUP:-true}
      GOTRUE_JWT_SECRET: ${JWT_SECRET}
      GOTRUE_JWT_EXP: ${JWT_EXPIRY:-3600}
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_EXTERNAL_EMAIL_ENABLED: false
      GOTRUE_MAILER_AUTOCONFIRM: ${ENABLE_EMAIL_AUTOCONFIRM:-false}
      GOTRUE_LOG_LEVEL: warn
    depends_on:
      - supabase-db
    networks:
      - supabase
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Supabase Realtime
  supabase-realtime:
    image: supabase/realtime:v2.27.5
    restart: always
    environment:
      PORT: 4000
      DB_HOST: supabase-db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER:-supabase}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB:-supabase}
      DB_AFTER_CONNECT_QUERY: 'SET search_path TO _realtime'
      DB_ENC_KEY: ${REALTIME_ENC_KEY:-supabaserealtime}
      API_JWT_SECRET: ${JWT_SECRET}
      SECRET_KEY_BASE: ${REALTIME_SECRET_KEY_BASE:-UpNVntn3cDxHJpq99YMc1T1AQgQpc8kfYTuRgBiYa15BLrx8etQoXz3gZv1/u2oq}
      ERL_AFLAGS: -proto_dist inet_tcp
      ENABLE_TAILSCALE: "false"
      DNS_NODES: "''"
      LOG_LEVEL: warn
    depends_on:
      - supabase-db
    networks:
      - supabase
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Supabase Storage
  supabase-storage:
    image: supabase/storage-api:v0.40.4
    restart: always
    environment:
      ANON_KEY: ${ANON_KEY}
      SERVICE_KEY: ${SERVICE_ROLE_KEY}
      POSTGREST_URL: http://supabase-rest:3000
      PGRST_JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: postgres://${POSTGRES_USER:-supabase}:${POSTGRES_PASSWORD}@supabase-db:5432/${POSTGRES_DB:-supabase}
      FILE_SIZE_LIMIT: 52428800
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      TENANT_ID: stub
      REGION: stub
      GLOBAL_S3_BUCKET: stub
      ENABLE_IMAGE_TRANSFORMATION: "false"
      LOG_LEVEL: warn
    volumes:
      - storage_data:/var/lib/storage:Z
    depends_on:
      - supabase-db
      - supabase-rest
    networks:
      - supabase
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  # Supabase Edge Functions
  supabase-edge:
    image: supabase/edge-runtime:v1.45.2
    restart: always
    environment:
      JWT_SECRET: ${JWT_SECRET}
      SUPABASE_URL: http://kong:8000
      SUPABASE_ANON_KEY: ${ANON_KEY}
      SUPABASE_SERVICE_ROLE_KEY: ${SERVICE_ROLE_KEY}
      VERIFY_JWT: ${FUNCTIONS_VERIFY_JWT:-false}
      LDAP_URL: ${LDAP_URL}
      LDAP_USER_BASE: ${LDAP_USER_BASE}
      LDAP_BIND_DN: ${LDAP_BIND_DN}
      LDAP_BIND_PASSWORD: ${LDAP_BIND_PASSWORD}
      JENKINS_BASE_URL: ${JENKINS_BASE_URL}
      JENKINS_API_TOKEN: ${JENKINS_API_TOKEN}
    volumes:
      - ./supabase/functions:/home/deno/functions:Z
      - edge_node_modules:/home/deno/functions/node_modules
    networks:
      - supabase
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  # Kong API Gateway
  kong:
    image: kong:2.8.1
    restart: always
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
      KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
      KONG_LOG_LEVEL: warn
    volumes:
      - ./supabase/config/kong.yml:/var/lib/kong/kong.yml:ro
    ports:
      - "${KONG_HTTP_PORT:-8000}:8000/tcp"
      - "${KONG_HTTPS_PORT:-8443}:8443/tcp"
    depends_on:
      - supabase-auth
      - supabase-rest
      - supabase-realtime
      - supabase-storage
      - supabase-edge
    networks:
      - supabase
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        VITE_SUPABASE_URL: ${API_EXTERNAL_URL}
        VITE_SUPABASE_ANON_KEY: ${ANON_KEY}
    restart: always
    environment:
      NODE_ENV: production
    networks:
      - supabase
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - kong
      - frontend
    networks:
      - supabase
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Log aggregation (optional)
  fluentd:
    image: fluent/fluentd:v1.16-1
    restart: always
    volumes:
      - ./logging/fluent.conf:/fluentd/etc/fluent.conf:ro
      - nginx_logs:/var/log/nginx:ro
    environment:
      FLUENTD_CONF: fluent.conf
    networks:
      - supabase
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'

volumes:
  db_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/git-validator/data/db
  storage_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/git-validator/data/storage
  edge_node_modules:
  nginx_logs:

networks:
  supabase:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16